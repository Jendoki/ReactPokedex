{"ast":null,"code":"var _jsxFileName = \"/home/jenn/Documents/projects/ReactPokedex/src/Components/Pokecard.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Descpokecard from \"./Descpokecard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pokecard = props => {\n  _s();\n\n  const [pokeinfo, setPokeinfo] = useState([]);\n  let flavorText = \"Couldn't load information on this pokÃ©mon, sorry!\"; //get info from ONE pokemon\n\n  const getIndividualInfos = async url => {\n    const response = await fetch(props.url);\n    const resultindividual = await response.json(); //console.log(resultindividual);\n\n    return resultindividual;\n  };\n\n  useEffect(() => {\n    getIndividualInfos(props.url).then(result => setPokeinfo(result));\n  }, [props.url]);\n  console.log(pokeinfo);\n\n  const getWeight = weight => {\n    const kg = weight / 10;\n    return kg;\n  };\n\n  const getHeight = height => {\n    const cm = height / 10;\n    return cm;\n  };\n\n  const switchEntry = () => {\n    if (pokedesc.flavor_text_entries[0].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[0].flavor_text;\n    } else if (pokedesc.flavor_text_entries[1].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[1].flavor_text;\n    } else if (pokedesc.flavor_text_entries[2].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[2].flavor_text;\n    } else if (pokedesc.flavor_text_entries[3].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[3].flavor_text;\n    } else if (pokedesc.flavor_text_entries[4].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[4].flavor_text;\n    } else if (pokedesc.flavor_text_entries[5].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[5].flavor_text;\n    } else if (pokedesc.flavor_text_entries[6].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[6].flavor_text;\n    } else if (pokedesc.flavor_text_entries[7].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[7].flavor_text;\n    } else if (pokedesc.flavor_text_entries[8].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[8].flavor_text;\n    } else if (pokedesc.flavor_text_entries[9].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[9].flavor_text;\n    }\n\n    return entry;\n  };\n\n  const getFlavorText = () => {\n    if (pokeinfo.species && pokeinfo.species.url) {\n      flavorText = /*#__PURE__*/_jsxDEV(Descpokecard, {\n        url: pokeinfo.species.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }, this);\n    } else if (pokeinfo.flavor_text_entries) {\n      flavorText = switchEntry();\n    }\n\n    return flavorText;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardpoke\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title\",\n          children: [pokeinfo.sprites ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"pokeimg\",\n            src: pokeinfo.sprites.front_default\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"pokeimg\",\n            src: \"/Assets/img/image0.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline-block\"\n            },\n            children: [\"n\\xB0\", pokeinfo.id, \" -\", \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                display: \"inline-block\"\n              },\n              className: \"capitalize\",\n              children: props.pokename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: pokeinfo.weight && pokeinfo.height ? getWeight(pokeinfo.weight) + \"kg - \" + getHeight(pokeinfo.height) + \" m\" : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 94\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), getFlavorText()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Pokecard, \"Dd2BqypFSstxkuESyresmcUDPt0=\");\n\n_c = Pokecard;\nexport default Pokecard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokecard\");","map":{"version":3,"sources":["/home/jenn/Documents/projects/ReactPokedex/src/Components/Pokecard.js"],"names":["useState","useEffect","Descpokecard","Pokecard","props","pokeinfo","setPokeinfo","flavorText","getIndividualInfos","url","response","fetch","resultindividual","json","then","result","console","log","getWeight","weight","kg","getHeight","height","cm","switchEntry","pokedesc","flavor_text_entries","language","name","entry","flavor_text","getFlavorText","species","sprites","front_default","display","id","pokename"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Descpokecard from \"./Descpokecard\";\n\nconst Pokecard = (props) => {\n  const [pokeinfo, setPokeinfo] = useState([]);\n  let flavorText = \"Couldn't load information on this pokÃ©mon, sorry!\";\n\n  //get info from ONE pokemon\n  const getIndividualInfos = async (url) => {\n    const response = await fetch(props.url);\n    const resultindividual = await response.json();\n    //console.log(resultindividual);\n    return resultindividual;\n  };\n\n  useEffect(() => {\n    getIndividualInfos(props.url).then((result) => setPokeinfo(result));\n  }, [props.url]);\n  console.log(pokeinfo);\n\n  const getWeight = (weight) => {\n    const kg = weight / 10;\n    return kg;\n  };\n\n  const getHeight = (height) => {\n    const cm = height / 10;\n    return cm;\n  };\n\n  const switchEntry = () => { \n    if (pokedesc.flavor_text_entries[0].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[0].flavor_text;\n    } else if (pokedesc.flavor_text_entries[1].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[1].flavor_text;\n    } else if (pokedesc.flavor_text_entries[2].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[2].flavor_text;\n    } else if (pokedesc.flavor_text_entries[3].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[3].flavor_text;\n    } else if (pokedesc.flavor_text_entries[4].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[4].flavor_text;\n    } else if (pokedesc.flavor_text_entries[5].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[5].flavor_text;\n    } else if (pokedesc.flavor_text_entries[6].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[6].flavor_text;\n    } else if (pokedesc.flavor_text_entries[7].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[7].flavor_text;\n    } else if (pokedesc.flavor_text_entries[8].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[8].flavor_text;\n    } else if (pokedesc.flavor_text_entries[9].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[9].flavor_text;\n    }\n    return entry;\n  }\n\n  const getFlavorText= () => {\n    if (pokeinfo.species && pokeinfo.species.url) {\n      flavorText = <Descpokecard url={pokeinfo.species.url} />;\n    } else if (pokeinfo.flavor_text_entries) {\n      flavorText = switchEntry();\n    }\n    return flavorText;\n  }\n\n  return (\n    <>\n      <div className=\"cardpoke\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">\n            {pokeinfo.sprites ? (\n              <img className=\"pokeimg\" src={pokeinfo.sprites.front_default} />\n            ) : (\n              <img className=\"pokeimg\" src=\"/Assets/img/image0.png\" />\n            )}\n            <div style={{ display: \"inline-block\" }}>\n              nÂ°{pokeinfo.id} -{\" \"}\n              <p style={{ display: \"inline-block\" }} className=\"capitalize\">\n                {props.pokename}\n              </p>\n            </div>\n            <div>\n              {pokeinfo.weight && pokeinfo.height ? (\n                getWeight(pokeinfo.weight) + \"kg - \" + getHeight(pokeinfo.height) + \" m\" ) : <p></p> }\n              \n            </div>\n          </h4>\n          {getFlavorText()}\n\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Pokecard;\n"]},"metadata":{},"sourceType":"module"}