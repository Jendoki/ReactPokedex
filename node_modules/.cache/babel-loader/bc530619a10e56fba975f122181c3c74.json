{"ast":null,"code":"var _jsxFileName = \"/home/jenn/Documents/projects/ReactPokedex/src/Components/Descpokecard.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Descpokecard = props => {\n  _s();\n\n  const [pokedesc, setPokedesc] = useState([]);\n  let entry = \"Couldn't load information on this pokémon, sorry!\";\n\n  const getDesc = async url => {\n    const response = await fetch(props.url);\n    const desc = await response.json();\n    return desc;\n  };\n\n  useEffect(() => {\n    getDesc(props.url).then(result => setPokedesc(result));\n  }, [props.url]);\n  console.log(pokedesc);\n\n  const switchEntry = () => {\n    if (pokedesc.flavor_text_entries[0].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[0].flavor_text;\n    } else if (pokedesc.flavor_text_entries[1].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[1].flavor_text;\n    } else if (pokedesc.flavor_text_entries[2].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[2].flavor_text;\n    } else if (pokedesc.flavor_text_entries[3].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[3].flavor_text;\n    } else if (pokedesc.flavor_text_entries[4].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[4].flavor_text;\n    } else if (pokedesc.flavor_text_entries[5].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[5].flavor_text;\n    } else if (pokedesc.flavor_text_entries[6].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[6].flavor_text;\n    } else if (pokedesc.flavor_text_entries[7].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[7].flavor_text;\n    } else if (pokedesc.flavor_text_entries[8].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[8].flavor_text;\n    } else if (pokedesc.flavor_text_entries[9].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[9].flavor_text;\n    }\n\n    return entry;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: pokedesc.flavor_text_entries ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-text left\",\n      children: switchEntry()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Couldn't load information on this pok\\xE9mon, sorry!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Descpokecard, \"5QflOPoTijoug9iswxmsiXgxIZQ=\");\n\n_c = Descpokecard;\nexport default Descpokecard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Descpokecard\");","map":{"version":3,"sources":["/home/jenn/Documents/projects/ReactPokedex/src/Components/Descpokecard.js"],"names":["useState","useEffect","Descpokecard","props","pokedesc","setPokedesc","entry","getDesc","url","response","fetch","desc","json","then","result","console","log","switchEntry","flavor_text_entries","language","name","flavor_text"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst Descpokecard = (props) => {\n  const [pokedesc, setPokedesc] = useState([]);\n  let entry = \"Couldn't load information on this pokémon, sorry!\";\n\n  const getDesc = async (url) => {\n    const response = await fetch(props.url);\n    const desc = await response.json();\n    return desc;\n  };\n\n  useEffect(() => {\n    getDesc(props.url).then((result) => setPokedesc(result));\n  }, [props.url]);\n  console.log(pokedesc);\n\n  const switchEntry = () => { \n    if (pokedesc.flavor_text_entries[0].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[0].flavor_text;\n    } else if (pokedesc.flavor_text_entries[1].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[1].flavor_text;\n    } else if (pokedesc.flavor_text_entries[2].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[2].flavor_text;\n    } else if (pokedesc.flavor_text_entries[3].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[3].flavor_text;\n    } else if (pokedesc.flavor_text_entries[4].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[4].flavor_text;\n    } else if (pokedesc.flavor_text_entries[5].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[5].flavor_text;\n    } else if (pokedesc.flavor_text_entries[6].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[6].flavor_text;\n    } else if (pokedesc.flavor_text_entries[7].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[7].flavor_text;\n    } else if (pokedesc.flavor_text_entries[8].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[8].flavor_text;\n    } else if (pokedesc.flavor_text_entries[9].language.name === \"en\") {\n      entry = pokedesc.flavor_text_entries[9].flavor_text;\n    }\n    return entry;\n  }\n\n  return (\n    <>\n      {pokedesc.flavor_text_entries ? (\n        <p className=\"card-text left\">\n          {switchEntry()}\n        </p>\n      ) : (\n        <p>Couldn't load information on this pokémon, sorry!</p>\n      )}\n    </>\n  );\n};\n\nexport default Descpokecard;\n"]},"metadata":{},"sourceType":"module"}