{"ast":null,"code":"import _regeneratorRuntime from\"/home/jenn/Documents/projects/ReactPokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/jenn/Documents/projects/ReactPokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/jenn/Documents/projects/ReactPokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var GetFlavortext=function GetFlavortext(props){var url=props.url;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),pokeinfo=_useState2[0],setPokeinfo=_useState2[1];var englishFT=[];var getInfos=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var response,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(url);case 2:response=_context.sent;_context.next=5;return response.json();case 5:result=_context.sent;return _context.abrupt(\"return\",result);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getInfos(_x){return _ref.apply(this,arguments);};}();useEffect(function(){getInfos(url).then(function(result){return setPokeinfo(result);});},[url]);var getEnglishtext=function getEnglishtext(){pokeinfo&&pokeinfo.flavor_text_entries?pokeinfo.flavor_text_entries.forEach(function(element){if(element.language.name===\"en\"){englishFT.push(element);}}):/*#__PURE__*/_jsx(\"p\",{});};getEnglishtext();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"left\"},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Pokedex entries\"}),englishFT.map(function(element){return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-3\",children:/*#__PURE__*/_jsx(\"p\",{className:\"capitalize\",children:element.version.name.replaceAll('-',' ')})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-9\",children:/*#__PURE__*/_jsx(\"p\",{children:element.flavor_text.replaceAll(\"\f\",\" \")})})]});})]})});};export default GetFlavortext;","map":{"version":3,"sources":["/home/jenn/Documents/projects/ReactPokedex/src/Components/Pokemon/GetFlavortext.js"],"names":["useState","useEffect","GetFlavortext","props","url","pokeinfo","setPokeinfo","englishFT","getInfos","fetch","response","json","result","then","getEnglishtext","flavor_text_entries","forEach","element","language","name","push","textAlign","map","version","replaceAll","flavor_text"],"mappings":"geAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,C,6IAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC/B,GAAMC,CAAAA,GAAG,CAAGD,KAAK,CAACC,GAAlB,CAD+B,cAECJ,QAAQ,CAAC,EAAD,CAFT,wCAExBK,QAFwB,eAEdC,WAFc,eAG/B,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CAEA,GAAMC,CAAAA,QAAQ,0FAAG,iBAAOJ,GAAP,4JACQK,CAAAA,KAAK,CAACL,GAAD,CADb,QACTM,QADS,qCAEMA,CAAAA,QAAQ,CAACC,IAAT,EAFN,QAETC,MAFS,+CAGRA,MAHQ,wDAAH,kBAARJ,CAAAA,QAAQ,4CAAd,CAMAP,SAAS,CAAC,UAAM,CACdO,QAAQ,CAACJ,GAAD,CAAR,CAAcS,IAAd,CAAmB,SAACD,MAAD,QAAYN,CAAAA,WAAW,CAACM,MAAD,CAAvB,EAAnB,EACD,CAFQ,CAEN,CAACR,GAAD,CAFM,CAAT,CAIA,GAAMU,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BT,QAAQ,EAAIA,QAAQ,CAACU,mBAArB,CACEV,QAAQ,CAACU,mBAAT,CAA6BC,OAA7B,CAAqC,SAACC,OAAD,CAAa,CAChD,GAAIA,OAAO,CAACC,QAAR,CAAiBC,IAAjB,GAA0B,IAA9B,CAAoC,CAClCZ,SAAS,CAACa,IAAV,CAAeH,OAAf,EACD,CACF,CAJD,CADF,cAOE,YAPF,CASD,CAVD,CAWAH,cAAc,GAEd,mBACE,sCACE,aAAK,KAAK,CAAE,CAAEO,SAAS,CAAE,MAAb,CAAZ,wBACE,uCADF,CAEGd,SAAS,CAACe,GAAV,CAAc,SAACL,OAAD,qBACb,aAAK,SAAS,CAAC,KAAf,wBACE,YAAK,SAAS,CAAC,OAAf,uBACE,UAAG,SAAS,CAAC,YAAb,UAA2BA,OAAO,CAACM,OAAR,CAAgBJ,IAAhB,CAAqBK,UAArB,CAAgC,GAAhC,CAAqC,GAArC,CAA3B,EADF,EADF,cAIE,YAAK,SAAS,CAAC,OAAf,uBACA,mBAAIP,OAAO,CAACQ,WAAR,CAAoBD,UAApB,CAA+B,GAA/B,CAAoC,GAApC,CAAJ,EADA,EAJF,GADa,EAAd,CAFH,GADF,EADF,CAiBD,CA7CD,CA+CA,cAAetB,CAAAA,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst GetFlavortext = (props) => {\n  const url = props.url;\n  const [pokeinfo, setPokeinfo] = useState([]);\n  const englishFT = [];\n\n  const getInfos = async (url) => {\n    const response = await fetch(url);\n    const result = await response.json();\n    return result;\n  };\n\n  useEffect(() => {\n    getInfos(url).then((result) => setPokeinfo(result));\n  }, [url]);\n\n  const getEnglishtext = () => {\n    pokeinfo && pokeinfo.flavor_text_entries ? (\n      pokeinfo.flavor_text_entries.forEach((element) => {\n        if (element.language.name === \"en\") {\n          englishFT.push(element);\n        }\n      })\n    ) : (\n      <p></p>\n    );\n  };\n  getEnglishtext();\n\n  return (\n    <>\n      <div style={{ textAlign: \"left\" }}>\n        <h4>Pokedex entries</h4>\n        {englishFT.map((element) => (\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <p className=\"capitalize\">{element.version.name.replaceAll('-', ' ')}</p>\n            </div>\n            <div className=\"col-9\">\n            <p>{element.flavor_text.replaceAll(\"\f\", \" \")}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default GetFlavortext;\n"]},"metadata":{},"sourceType":"module"}