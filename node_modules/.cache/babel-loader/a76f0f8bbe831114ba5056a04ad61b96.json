{"ast":null,"code":"import _regeneratorRuntime from\"/home/jenn/Documents/projects/ReactPokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/jenn/Documents/projects/ReactPokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/jenn/Documents/projects/ReactPokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";import Descpokecard from\"./Descpokecard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Pokecard=function Pokecard(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),pokeinfo=_useState2[0],setPokeinfo=_useState2[1];var flavorText=\"Couldn't load information on this pokémon, sorry!\";//get info from ONE pokemon\nvar getIndividualInfos=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var response,resultindividual;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(props.url);case 2:response=_context.sent;_context.next=5;return response.json();case 5:resultindividual=_context.sent;return _context.abrupt(\"return\",resultindividual);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getIndividualInfos(_x){return _ref.apply(this,arguments);};}();useEffect(function(){getIndividualInfos(props.url).then(function(result){return setPokeinfo(result);});},[props.url]);var id=pokeinfo.id;var getWeight=function getWeight(weight){var kg=weight/10;return kg;};var getHeight=function getHeight(height){var cm=height/10;return cm;};var switchEntry=function switchEntry(){if(pokeinfo.flavor_text_entries[0].language.name===\"en\"){flavorText=pokeinfo.flavor_text_entries[0].flavor_text;}else if(pokeinfo.flavor_text_entries[1].language.name===\"en\"){flavorText=pokeinfo.flavor_text_entries[1].flavor_text;}else if(pokeinfo.flavor_text_entries[2].language.name===\"en\"){flavorText=pokeinfo.flavor_text_entries[2].flavor_text;}else if(pokeinfo.flavor_text_entries[3].language.name===\"en\"){flavorText=pokeinfo.flavor_text_entries[3].flavor_text;}else if(pokeinfo.flavor_text_entries[4].language.name===\"en\"){flavorText=pokeinfo.flavor_text_entries[4].flavor_text;}else if(pokeinfo.flavor_text_entries[5].language.name===\"en\"){flavorText=pokeinfo.flavor_text_entries[5].flavor_text;}else if(pokeinfo.flavor_text_entries[6].language.name===\"en\"){flavorText=pokeinfo.flavor_text_entries[6].flavor_text;}else if(pokeinfo.flavor_text_entries[7].language.name===\"en\"){flavorText=pokeinfo.flavor_text_entries[7].flavor_text;}else if(pokeinfo.flavor_text_entries[8].language.name===\"en\"){flavorText=pokeinfo.flavor_text_entries[8].flavor_text;}else if(pokeinfo.flavor_text_entries[9].language.name===\"en\"){flavorText=pokeinfo.flavor_text_entries[9].flavor_text;}return flavorText;};var getFlavorText=function getFlavorText(){if(pokeinfo.species&&pokeinfo.species.url){flavorText=/*#__PURE__*/_jsx(Descpokecard,{url:pokeinfo.species.url});}else if(pokeinfo.flavor_text_entries){flavorText=switchEntry();}return flavorText;};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"a\",{href:\"/pokemon/\"+id,style:{color:\"black\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"cardpoke\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"card-title\",children:[pokeinfo.sprites?/*#__PURE__*/_jsx(\"img\",{className:\"pokeimg\",src:pokeinfo.sprites.front_default}):/*#__PURE__*/_jsx(\"img\",{className:\"pokeimg\",src:\"/Assets/img/image0.png\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"inline-block\"},children:[\"#\",pokeinfo.id,\" -\",\" \",/*#__PURE__*/_jsx(\"p\",{style:{display:\"inline-block\"},className:\"capitalize\",children:props.pokename.replaceAll('-',' ')})]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h4\",{children:pokeinfo.weight&&pokeinfo.height?getWeight(pokeinfo.weight)+\"kg - \"+getHeight(pokeinfo.height)+\" m\":/*#__PURE__*/_jsx(\"p\",{})})}),getFlavorText()]})})})});};export default Pokecard;","map":{"version":3,"sources":["/home/jenn/Documents/projects/ReactPokedex/src/Components/ListPokemon/Pokecard.js"],"names":["useState","useEffect","Descpokecard","Pokecard","props","pokeinfo","setPokeinfo","flavorText","getIndividualInfos","url","fetch","response","json","resultindividual","then","result","id","getWeight","weight","kg","getHeight","height","cm","switchEntry","flavor_text_entries","language","name","flavor_text","getFlavorText","species","color","sprites","front_default","display","pokename","replaceAll"],"mappings":"geAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,C,6IAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,eACMJ,QAAQ,CAAC,EAAD,CADd,wCACnBK,QADmB,eACTC,WADS,eAE1B,GAAIC,CAAAA,UAAU,CAAG,mDAAjB,CAEA;AACA,GAAMC,CAAAA,kBAAkB,0FAAG,iBAAOC,GAAP,sKACFC,CAAAA,KAAK,CAACN,KAAK,CAACK,GAAP,CADH,QACnBE,QADmB,qCAEMA,CAAAA,QAAQ,CAACC,IAAT,EAFN,QAEnBC,gBAFmB,+CAGlBA,gBAHkB,wDAAH,kBAAlBL,CAAAA,kBAAkB,4CAAxB,CAMAP,SAAS,CAAC,UAAM,CACdO,kBAAkB,CAACJ,KAAK,CAACK,GAAP,CAAlB,CAA8BK,IAA9B,CAAmC,SAACC,MAAD,QAAYT,CAAAA,WAAW,CAACS,MAAD,CAAvB,EAAnC,EACD,CAFQ,CAEN,CAACX,KAAK,CAACK,GAAP,CAFM,CAAT,CAIA,GAAIO,CAAAA,EAAE,CAAGX,QAAQ,CAACW,EAAlB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,CAAY,CAC5B,GAAMC,CAAAA,EAAE,CAAGD,MAAM,CAAG,EAApB,CACA,MAAOC,CAAAA,EAAP,CACD,CAHD,CAKA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,CAAY,CAC5B,GAAMC,CAAAA,EAAE,CAAGD,MAAM,CAAG,EAApB,CACA,MAAOC,CAAAA,EAAP,CACD,CAHD,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAIlB,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCC,QAAhC,CAAyCC,IAAzC,GAAkD,IAAtD,CAA4D,CAC1DnB,UAAU,CAAGF,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCG,WAA7C,CACD,CAFD,IAEO,IAAItB,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCC,QAAhC,CAAyCC,IAAzC,GAAkD,IAAtD,CAA4D,CACjEnB,UAAU,CAAGF,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCG,WAA7C,CACD,CAFM,IAEA,IAAItB,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCC,QAAhC,CAAyCC,IAAzC,GAAkD,IAAtD,CAA4D,CACjEnB,UAAU,CAAGF,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCG,WAA7C,CACD,CAFM,IAEA,IAAItB,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCC,QAAhC,CAAyCC,IAAzC,GAAkD,IAAtD,CAA4D,CACjEnB,UAAU,CAAGF,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCG,WAA7C,CACD,CAFM,IAEA,IAAItB,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCC,QAAhC,CAAyCC,IAAzC,GAAkD,IAAtD,CAA4D,CACjEnB,UAAU,CAAGF,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCG,WAA7C,CACD,CAFM,IAEA,IAAItB,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCC,QAAhC,CAAyCC,IAAzC,GAAkD,IAAtD,CAA4D,CACjEnB,UAAU,CAAGF,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCG,WAA7C,CACD,CAFM,IAEA,IAAItB,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCC,QAAhC,CAAyCC,IAAzC,GAAkD,IAAtD,CAA4D,CACjEnB,UAAU,CAAGF,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCG,WAA7C,CACD,CAFM,IAEA,IAAItB,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCC,QAAhC,CAAyCC,IAAzC,GAAkD,IAAtD,CAA4D,CACjEnB,UAAU,CAAGF,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCG,WAA7C,CACD,CAFM,IAEA,IAAItB,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCC,QAAhC,CAAyCC,IAAzC,GAAkD,IAAtD,CAA4D,CACjEnB,UAAU,CAAGF,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCG,WAA7C,CACD,CAFM,IAEA,IAAItB,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCC,QAAhC,CAAyCC,IAAzC,GAAkD,IAAtD,CAA4D,CACjEnB,UAAU,CAAGF,QAAQ,CAACmB,mBAAT,CAA6B,CAA7B,EAAgCG,WAA7C,CACD,CACD,MAAOpB,CAAAA,UAAP,CACD,CAvBD,CAyBA,GAAMqB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAIvB,QAAQ,CAACwB,OAAT,EAAoBxB,QAAQ,CAACwB,OAAT,CAAiBpB,GAAzC,CAA8C,CAC5CF,UAAU,cAAG,KAAC,YAAD,EAAc,GAAG,CAAEF,QAAQ,CAACwB,OAAT,CAAiBpB,GAApC,EAAb,CACD,CAFD,IAEO,IAAIJ,QAAQ,CAACmB,mBAAb,CAAkC,CACvCjB,UAAU,CAAGgB,WAAW,EAAxB,CACD,CACD,MAAOhB,CAAAA,UAAP,CACD,CAPD,CASA,mBACE,sCACE,UAAG,IAAI,CAAE,YAAcS,EAAvB,CAA2B,KAAK,CAAE,CAAEc,KAAK,CAAE,OAAT,CAAlC,uBACE,YAAK,SAAS,CAAC,UAAf,uBACE,aAAK,SAAS,CAAC,WAAf,wBACE,YAAI,SAAS,CAAC,YAAd,WACGzB,QAAQ,CAAC0B,OAAT,cACC,YAAK,SAAS,CAAC,SAAf,CAAyB,GAAG,CAAE1B,QAAQ,CAAC0B,OAAT,CAAiBC,aAA/C,EADD,cAGC,YAAK,SAAS,CAAC,SAAf,CAAyB,GAAG,CAAC,wBAA7B,EAJJ,cAME,aAAK,KAAK,CAAE,CAAEC,OAAO,CAAE,cAAX,CAAZ,eACI5B,QAAQ,CAACW,EADb,MACmB,GADnB,cAEE,UAAG,KAAK,CAAE,CAAEiB,OAAO,CAAE,cAAX,CAAV,CAAuC,SAAS,CAAC,YAAjD,UACG7B,KAAK,CAAC8B,QAAN,CAAeC,UAAf,CAA0B,GAA1B,CAA+B,GAA/B,CADH,EAFF,GANF,GADF,cAcE,kCACE,oBACG9B,QAAQ,CAACa,MAAT,EAAmBb,QAAQ,CAACgB,MAA5B,CACCJ,SAAS,CAACZ,QAAQ,CAACa,MAAV,CAAT,CACA,OADA,CAEAE,SAAS,CAACf,QAAQ,CAACgB,MAAV,CAFT,CAGA,IAJD,cAMC,YAPJ,EADF,EAdF,CA2BGO,aAAa,EA3BhB,GADF,EADF,EADF,EADF,CAqCD,CAlGD,CAoGA,cAAezB,CAAAA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Descpokecard from \"./Descpokecard\";\n\nconst Pokecard = (props) => {\n  const [pokeinfo, setPokeinfo] = useState([]);\n  let flavorText = \"Couldn't load information on this pokémon, sorry!\";\n\n  //get info from ONE pokemon\n  const getIndividualInfos = async (url) => {\n    const response = await fetch(props.url);\n    const resultindividual = await response.json();\n    return resultindividual;\n  };\n\n  useEffect(() => {\n    getIndividualInfos(props.url).then((result) => setPokeinfo(result));\n  }, [props.url]);\n\n  let id = pokeinfo.id;\n\n  const getWeight = (weight) => {\n    const kg = weight / 10;\n    return kg;\n  };\n\n  const getHeight = (height) => {\n    const cm = height / 10;\n    return cm;\n  };\n\n  const switchEntry = () => {\n    if (pokeinfo.flavor_text_entries[0].language.name === \"en\") {\n      flavorText = pokeinfo.flavor_text_entries[0].flavor_text;\n    } else if (pokeinfo.flavor_text_entries[1].language.name === \"en\") {\n      flavorText = pokeinfo.flavor_text_entries[1].flavor_text;\n    } else if (pokeinfo.flavor_text_entries[2].language.name === \"en\") {\n      flavorText = pokeinfo.flavor_text_entries[2].flavor_text;\n    } else if (pokeinfo.flavor_text_entries[3].language.name === \"en\") {\n      flavorText = pokeinfo.flavor_text_entries[3].flavor_text;\n    } else if (pokeinfo.flavor_text_entries[4].language.name === \"en\") {\n      flavorText = pokeinfo.flavor_text_entries[4].flavor_text;\n    } else if (pokeinfo.flavor_text_entries[5].language.name === \"en\") {\n      flavorText = pokeinfo.flavor_text_entries[5].flavor_text;\n    } else if (pokeinfo.flavor_text_entries[6].language.name === \"en\") {\n      flavorText = pokeinfo.flavor_text_entries[6].flavor_text;\n    } else if (pokeinfo.flavor_text_entries[7].language.name === \"en\") {\n      flavorText = pokeinfo.flavor_text_entries[7].flavor_text;\n    } else if (pokeinfo.flavor_text_entries[8].language.name === \"en\") {\n      flavorText = pokeinfo.flavor_text_entries[8].flavor_text;\n    } else if (pokeinfo.flavor_text_entries[9].language.name === \"en\") {\n      flavorText = pokeinfo.flavor_text_entries[9].flavor_text;\n    }\n    return flavorText;\n  };\n\n  const getFlavorText = () => {\n    if (pokeinfo.species && pokeinfo.species.url) {\n      flavorText = <Descpokecard url={pokeinfo.species.url} />;\n    } else if (pokeinfo.flavor_text_entries) {\n      flavorText = switchEntry();\n    }\n    return flavorText;\n  };\n\n  return (\n    <>\n      <a href={\"/pokemon/\" + id} style={{ color: \"black\" }}>\n        <div className=\"cardpoke\">\n          <div className=\"card-body\">\n            <h3 className=\"card-title\">\n              {pokeinfo.sprites ? (\n                <img className=\"pokeimg\" src={pokeinfo.sprites.front_default} />\n              ) : (\n                <img className=\"pokeimg\" src=\"/Assets/img/image0.png\" />\n              )}\n              <div style={{ display: \"inline-block\" }}>\n                #{pokeinfo.id} -{\" \"}\n                <p style={{ display: \"inline-block\" }} className=\"capitalize\">\n                  {props.pokename.replaceAll('-', ' ')}\n                </p>\n              </div>\n            </h3>\n            <div>\n              <h4>\n                {pokeinfo.weight && pokeinfo.height ? (\n                  getWeight(pokeinfo.weight) +\n                  \"kg - \" +\n                  getHeight(pokeinfo.height) +\n                  \" m\"\n                ) : (\n                  <p></p>\n                )}\n              </h4>\n            </div>\n\n            {getFlavorText()}\n          </div>\n        </div>\n      </a>\n    </>\n  );\n};\n\nexport default Pokecard;\n"]},"metadata":{},"sourceType":"module"}