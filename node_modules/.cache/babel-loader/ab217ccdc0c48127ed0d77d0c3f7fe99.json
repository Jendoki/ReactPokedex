{"ast":null,"code":"var _jsxFileName = \"/home/jenn/Documents/projects/ReactPokedex/src/Components/Pokemon/GetFlavortext.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GetFlavortext = props => {\n  _s();\n\n  const url = props.url;\n  const [pokeinfo, setPokeinfo] = useState([]);\n  const englishFT = [];\n\n  const getInfos = async url => {\n    const response = await fetch(url);\n    const result = await response.json();\n    return result;\n  };\n\n  useEffect(() => {\n    getInfos(url).then(result => setPokeinfo(result));\n  }, [url]); //console.log(pokeinfo);\n\n  const getEnglishtext = () => {\n    pokeinfo.flavor_text_entries.forEach(element => {\n      if (element.language.name === \"en\") {\n        englishFT.push(element);\n      }\n    });\n  };\n\n  getEnglishtext();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: englishFT.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: element.version.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: element.flavor_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(GetFlavortext, \"Dd2BqypFSstxkuESyresmcUDPt0=\");\n\n_c = GetFlavortext;\nexport default GetFlavortext;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetFlavortext\");","map":{"version":3,"sources":["/home/jenn/Documents/projects/ReactPokedex/src/Components/Pokemon/GetFlavortext.js"],"names":["useState","useEffect","GetFlavortext","props","url","pokeinfo","setPokeinfo","englishFT","getInfos","response","fetch","result","json","then","getEnglishtext","flavor_text_entries","forEach","element","language","name","push","map","version","flavor_text"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,GAAG,GAAGD,KAAK,CAACC,GAAlB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMO,SAAS,GAAG,EAAlB;;AAEA,QAAMC,QAAQ,GAAG,MAAOJ,GAAP,IAAe;AAC9B,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,CAA5B;AACA,UAAMO,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,WAAOD,MAAP;AACD,GAJD;;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACJ,GAAD,CAAR,CAAcS,IAAd,CAAoBF,MAAD,IAAYL,WAAW,CAACK,MAAD,CAA1C;AACD,GAFQ,EAEN,CAACP,GAAD,CAFM,CAAT,CAX+B,CAc/B;;AAEA,QAAMU,cAAc,GAAG,MAAM;AAC3BT,IAAAA,QAAQ,CAACU,mBAAT,CAA6BC,OAA7B,CAAsCC,OAAD,IAAa;AAChD,UAAIA,OAAO,CAACC,QAAR,CAAiBC,IAAjB,KAA0B,IAA9B,EAAoC;AAClCZ,QAAAA,SAAS,CAACa,IAAV,CAAeH,OAAf;AACD;AACF,KAJD;AAKD,GAND;;AAOAH,EAAAA,cAAc;AAEd,sBACE;AAAA,2BACE;AAAA,gBACKP,SAAS,CAACc,GAAV,CAAeJ,OAAD,iBACX;AAAA,gCACA;AAAA,oBAAKA,OAAO,CAACK,OAAR,CAAgBH;AAArB;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,oBAAIF,OAAO,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAYD,CArCD;;GAAMrB,a;;KAAAA,a;AAuCN,eAAeA,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst GetFlavortext = (props) => {\n  const url = props.url;\n  const [pokeinfo, setPokeinfo] = useState([]);\n  const englishFT = [];\n\n  const getInfos = async (url) => {\n    const response = await fetch(url);\n    const result = await response.json();\n    return result;\n  };\n\n  useEffect(() => {\n    getInfos(url).then((result) => setPokeinfo(result));\n  }, [url]);\n  //console.log(pokeinfo);\n\n  const getEnglishtext = () => {\n    pokeinfo.flavor_text_entries.forEach((element) => {\n      if (element.language.name === \"en\") {\n        englishFT.push(element);\n      }\n    });\n  };\n  getEnglishtext();\n\n  return (\n    <>\n      <div>\n          {englishFT.map((element) => (\n              <div>\n              <h4>{element.version.name}</h4>\n              <p>{element.flavor_text}</p>\n              </div>\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default GetFlavortext;\n"]},"metadata":{},"sourceType":"module"}